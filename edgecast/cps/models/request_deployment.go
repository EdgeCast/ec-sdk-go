// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RequestDeployment request deployment
//
// swagger:model RequestDeployment
type RequestDeployment struct {

	// delivery region
	// Enum: [GlobalPremiumPlusAsia NorthAmericaAndEurope GlobalStandard Internal GlobalPremiumAsiaPlusChina GlobalPremiumAsiaPlusIndia GlobalPremiumAsiaPlusChinaAndIndia GlobalPremiumAsiaPlusLatam GlobalPremiumAsiaPremiumChinaPlusLatam]
	DeliveryRegion string `json:"delivery_region,omitempty"`

	// hex url
	HexURL string `json:"hex_url,omitempty"`

	// platform
	// Enum: [HttpLarge HttpSmall Adn]
	Platform string `json:"platform,omitempty"`
}

// Validate validates this request deployment
func (m *RequestDeployment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeliveryRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlatform(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var requestDeploymentTypeDeliveryRegionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GlobalPremiumPlusAsia","NorthAmericaAndEurope","GlobalStandard","Internal","GlobalPremiumAsiaPlusChina","GlobalPremiumAsiaPlusIndia","GlobalPremiumAsiaPlusChinaAndIndia","GlobalPremiumAsiaPlusLatam","GlobalPremiumAsiaPremiumChinaPlusLatam"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		requestDeploymentTypeDeliveryRegionPropEnum = append(requestDeploymentTypeDeliveryRegionPropEnum, v)
	}
}

const (

	// RequestDeploymentDeliveryRegionGlobalPremiumPlusAsia captures enum value "GlobalPremiumPlusAsia"
	RequestDeploymentDeliveryRegionGlobalPremiumPlusAsia string = "GlobalPremiumPlusAsia"

	// RequestDeploymentDeliveryRegionNorthAmericaAndEurope captures enum value "NorthAmericaAndEurope"
	RequestDeploymentDeliveryRegionNorthAmericaAndEurope string = "NorthAmericaAndEurope"

	// RequestDeploymentDeliveryRegionGlobalStandard captures enum value "GlobalStandard"
	RequestDeploymentDeliveryRegionGlobalStandard string = "GlobalStandard"

	// RequestDeploymentDeliveryRegionInternal captures enum value "Internal"
	RequestDeploymentDeliveryRegionInternal string = "Internal"

	// RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusChina captures enum value "GlobalPremiumAsiaPlusChina"
	RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusChina string = "GlobalPremiumAsiaPlusChina"

	// RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusIndia captures enum value "GlobalPremiumAsiaPlusIndia"
	RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusIndia string = "GlobalPremiumAsiaPlusIndia"

	// RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusChinaAndIndia captures enum value "GlobalPremiumAsiaPlusChinaAndIndia"
	RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusChinaAndIndia string = "GlobalPremiumAsiaPlusChinaAndIndia"

	// RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusLatam captures enum value "GlobalPremiumAsiaPlusLatam"
	RequestDeploymentDeliveryRegionGlobalPremiumAsiaPlusLatam string = "GlobalPremiumAsiaPlusLatam"

	// RequestDeploymentDeliveryRegionGlobalPremiumAsiaPremiumChinaPlusLatam captures enum value "GlobalPremiumAsiaPremiumChinaPlusLatam"
	RequestDeploymentDeliveryRegionGlobalPremiumAsiaPremiumChinaPlusLatam string = "GlobalPremiumAsiaPremiumChinaPlusLatam"
)

// prop value enum
func (m *RequestDeployment) validateDeliveryRegionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, requestDeploymentTypeDeliveryRegionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RequestDeployment) validateDeliveryRegion(formats strfmt.Registry) error {
	if swag.IsZero(m.DeliveryRegion) { // not required
		return nil
	}

	// value enum
	if err := m.validateDeliveryRegionEnum("delivery_region", "body", m.DeliveryRegion); err != nil {
		return err
	}

	return nil
}

var requestDeploymentTypePlatformPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HttpLarge","HttpSmall","Adn"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		requestDeploymentTypePlatformPropEnum = append(requestDeploymentTypePlatformPropEnum, v)
	}
}

const (

	// RequestDeploymentPlatformHTTPLarge captures enum value "HttpLarge"
	RequestDeploymentPlatformHTTPLarge string = "HttpLarge"

	// RequestDeploymentPlatformHTTPSmall captures enum value "HttpSmall"
	RequestDeploymentPlatformHTTPSmall string = "HttpSmall"

	// RequestDeploymentPlatformAdn captures enum value "Adn"
	RequestDeploymentPlatformAdn string = "Adn"
)

// prop value enum
func (m *RequestDeployment) validatePlatformEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, requestDeploymentTypePlatformPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RequestDeployment) validatePlatform(formats strfmt.Registry) error {
	if swag.IsZero(m.Platform) { // not required
		return nil
	}

	// value enum
	if err := m.validatePlatformEnum("platform", "body", m.Platform); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this request deployment based on context it is used
func (m *RequestDeployment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RequestDeployment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RequestDeployment) UnmarshalBinary(b []byte) error {
	var res RequestDeployment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

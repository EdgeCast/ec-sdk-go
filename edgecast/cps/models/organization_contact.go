// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrganizationContact organization contact
//
// swagger:model OrganizationContact
type OrganizationContact struct {

	// contact type
	// Enum: [EvApprover OrganizationContact TechnicalContact Unknown]
	ContactType string `json:"contact_type,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// first name
	FirstName string `json:"first_name,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// last name
	LastName string `json:"last_name,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this organization contact
func (m *OrganizationContact) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContactType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var organizationContactTypeContactTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["EvApprover","OrganizationContact","TechnicalContact","Unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		organizationContactTypeContactTypePropEnum = append(organizationContactTypeContactTypePropEnum, v)
	}
}

const (

	// OrganizationContactContactTypeEvApprover captures enum value "EvApprover"
	OrganizationContactContactTypeEvApprover string = "EvApprover"

	// OrganizationContactContactTypeOrganizationContact captures enum value "OrganizationContact"
	OrganizationContactContactTypeOrganizationContact string = "OrganizationContact"

	// OrganizationContactContactTypeTechnicalContact captures enum value "TechnicalContact"
	OrganizationContactContactTypeTechnicalContact string = "TechnicalContact"

	// OrganizationContactContactTypeUnknown captures enum value "Unknown"
	OrganizationContactContactTypeUnknown string = "Unknown"
)

// prop value enum
func (m *OrganizationContact) validateContactTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, organizationContactTypeContactTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *OrganizationContact) validateContactType(formats strfmt.Registry) error {
	if swag.IsZero(m.ContactType) { // not required
		return nil
	}

	// value enum
	if err := m.validateContactTypeEnum("contact_type", "body", m.ContactType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this organization contact based on context it is used
func (m *OrganizationContact) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrganizationContact) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrganizationContact) UnmarshalBinary(b []byte) error {
	var res OrganizationContact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

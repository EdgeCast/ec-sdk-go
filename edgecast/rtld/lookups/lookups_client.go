// Copyright 2021 Edgecast Inc., Licensed under the terms of the Apache 2.0 license. See LICENSE file in project root for terms.

package lookups

// This file was generated by codegen-sdk-go.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/EdgeCast/ec-sdk-go/edgecast/client"
)

// New creates a new lookups API client.
func New(c client.Client) ClientService {
	return &Client{Client: c}
}

/*
Client for lookups API
*/
type Client struct {
	client.Client
}

// ClientService is the interface for Client methods
type ClientService interface {
	LookupsGetAwsRegions(params *LookupsGetAwsRegionsParams) (*LookupsGetAwsRegionsOK, error)

	LookupsGetAzureAccessTypes(params *LookupsGetAzureAccessTypesParams) (*LookupsGetAzureAccessTypesOK, error)

	LookupsGetCustomItems(params *LookupsGetCustomItemsParams) (*LookupsGetCustomItemsOK, error)

	LookupsGetDeliveryMethods(params *LookupsGetDeliveryMethodsParams) (*LookupsGetDeliveryMethodsOK, error)

	LookupsGetDownsamplingRates(params *LookupsGetDownsamplingRatesParams) (*LookupsGetDownsamplingRatesOK, error)

	LookupsGetFieldRl(params *LookupsGetFieldRlParams) (*LookupsGetFieldRlOK, error)

	LookupsGetFieldsCdn(params *LookupsGetFieldsCdnParams) (*LookupsGetFieldsCdnOK, error)

	LookupsGetFieldsWaf(params *LookupsGetFieldsWafParams) (*LookupsGetFieldsWafOK, error)

	LookupsGetHTTPAuthenticationMethods(params *LookupsGetHTTPAuthenticationMethodsParams) (*LookupsGetHTTPAuthenticationMethodsOK, error)

	LookupsGetLogFormats(params *LookupsGetLogFormatsParams) (*LookupsGetLogFormatsOK, error)

	LookupsGetPlatforms(params *LookupsGetPlatformsParams) (*LookupsGetPlatformsOK, error)

	LookupsGetStatusCodes(params *LookupsGetStatusCodesParams) (*LookupsGetStatusCodesOK, error)
}

/*
  LookupsGetAwsRegions lookups get aws regions API
*/
func (a *Client) LookupsGetAwsRegions(params *LookupsGetAwsRegionsParams) (*LookupsGetAwsRegionsOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetAwsRegionsParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetAwsRegionsParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/aws-regions"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetAwsRegions: %v", err)
	}

	parsedResponse := &LookupsGetAwsRegionsOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetAwsRegions: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetAzureAccessTypes lookups get azure access types API
*/
func (a *Client) LookupsGetAzureAccessTypes(params *LookupsGetAzureAccessTypesParams) (*LookupsGetAzureAccessTypesOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetAzureAccessTypesParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetAzureAccessTypesParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/azure-access-types"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetAzureAccessTypes: %v", err)
	}

	parsedResponse := &LookupsGetAzureAccessTypesOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetAzureAccessTypes: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetCustomItems lookups get custom items API
*/
func (a *Client) LookupsGetCustomItems(params *LookupsGetCustomItemsParams) (*LookupsGetCustomItemsOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetCustomItemsParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetCustomItemsParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/custom-items"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetCustomItems: %v", err)
	}

	parsedResponse := &LookupsGetCustomItemsOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetCustomItems: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetDeliveryMethods lookups get delivery methods API
*/
func (a *Client) LookupsGetDeliveryMethods(params *LookupsGetDeliveryMethodsParams) (*LookupsGetDeliveryMethodsOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetDeliveryMethodsParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetDeliveryMethodsParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/delivery-methods"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetDeliveryMethods: %v", err)
	}

	parsedResponse := &LookupsGetDeliveryMethodsOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetDeliveryMethods: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetDownsamplingRates lookups get downsampling rates API
*/
func (a *Client) LookupsGetDownsamplingRates(params *LookupsGetDownsamplingRatesParams) (*LookupsGetDownsamplingRatesOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetDownsamplingRatesParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetDownsamplingRatesParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/downsampling-rates"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetDownsamplingRates: %v", err)
	}

	parsedResponse := &LookupsGetDownsamplingRatesOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetDownsamplingRates: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetFieldRl lookups get field rl API
*/
func (a *Client) LookupsGetFieldRl(params *LookupsGetFieldRlParams) (*LookupsGetFieldRlOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetFieldRlParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetFieldRlParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/rl/fields"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetFieldRl: %v", err)
	}

	parsedResponse := &LookupsGetFieldRlOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetFieldRl: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetFieldsCdn lookups get fields cdn API
*/
func (a *Client) LookupsGetFieldsCdn(params *LookupsGetFieldsCdnParams) (*LookupsGetFieldsCdnOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetFieldsCdnParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetFieldsCdnParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/cdn/fields"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetFieldsCdn: %v", err)
	}

	parsedResponse := &LookupsGetFieldsCdnOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetFieldsCdn: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetFieldsWaf lookups get fields waf API
*/
func (a *Client) LookupsGetFieldsWaf(params *LookupsGetFieldsWafParams) (*LookupsGetFieldsWafOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetFieldsWafParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetFieldsWafParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/waf/fields"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetFieldsWaf: %v", err)
	}

	parsedResponse := &LookupsGetFieldsWafOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetFieldsWaf: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetHTTPAuthenticationMethods lookups get Http authentication methods API
*/
func (a *Client) LookupsGetHTTPAuthenticationMethods(params *LookupsGetHTTPAuthenticationMethodsParams) (*LookupsGetHTTPAuthenticationMethodsOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetHTTPAuthenticationMethodsParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetHTTPAuthenticationMethodsParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/http-authentication-methods"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetHTTPAuthenticationMethods: %v", err)
	}

	parsedResponse := &LookupsGetHTTPAuthenticationMethodsOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetHTTPAuthenticationMethods: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetLogFormats lookups get log formats API
*/
func (a *Client) LookupsGetLogFormats(params *LookupsGetLogFormatsParams) (*LookupsGetLogFormatsOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetLogFormatsParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetLogFormatsParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/log-formats"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetLogFormats: %v", err)
	}

	parsedResponse := &LookupsGetLogFormatsOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetLogFormats: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetPlatforms lookups get platforms API
*/
func (a *Client) LookupsGetPlatforms(params *LookupsGetPlatformsParams) (*LookupsGetPlatformsOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetPlatformsParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetPlatformsParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/platforms"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetPlatforms: %v", err)
	}

	parsedResponse := &LookupsGetPlatformsOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetPlatforms: %v", err)
	}

	return parsedResponse, nil
}

/*
  LookupsGetStatusCodes lookups get status codes API
*/
func (a *Client) LookupsGetStatusCodes(params *LookupsGetStatusCodesParams) (*LookupsGetStatusCodesOK, error) {
	// Validate the params before sending
	if params == nil {
		params = NewLookupsGetStatusCodesParams()
	}

	//Set parameters
	results, err := WriteToRequestLookupsGetStatusCodesParams(params)
	if err != nil {
		return nil, err
	}

	url := a.Config.BaseAPIURL.String() + "/v1.0/status-codes"

	request, err := a.Client.PrepareRequest("GET", url, results.Body, results.QueryParams, results.PathParams)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetStatusCodes: %v", err)
	}

	parsedResponse := &LookupsGetStatusCodesOK{}

	_, err = a.Client.SendRequest(request, parsedResponse)
	if err != nil {
		return nil, fmt.Errorf("LookupsGetStatusCodes: %v", err)
	}

	return parsedResponse, nil
}

type RequestParameters struct {
	QueryParams map[string]string
	PathParams  map[string]string
	Body        interface{}
}

func NewRequestParameters() *RequestParameters {
	return &RequestParameters{
		QueryParams: make(map[string]string),
		PathParams:  make(map[string]string),
	}
}
